package com.cts.training.bootapphibernate.dao;

import java.util.List;

import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.cts.training.bootapphibernate.entity.Product;


@Repository
@Transactional
public class ProductDaoHibernateImpl implements IProductDao {

	// dependency
	
	private EntityManager Em;
	
	@Autowired
	public ProductDaoHibernateImpl(EntityManager Em) {
		// TODO Auto-generated constructor stub
	     this.Em=Em;	
	}
	
	@Override
	public List<Product> findAll() {
		// TODO Auto-generated method stub
		// get the Hibernate Session object (Persistant Context)
		Query query=this.Em.createQuery("from Products");//
		

		// Student : entity class name
		// query generated by Hibernate is returned as Object
		//Query<Product> query =  session.createQuery("from Product", Product.class);
		List<Product> products = query.getResultList();
		return products;
	}

	@Override
	public Product findById(Integer id) {
		// TODO Auto-generated method stub
		// get the Hibernate Session object (Persistant Context)
		// every time new session object is required
		// as persistant context works within a method
		
		Product product = this.Em.find(Product.class, id);
		
		return product;
	}

	@Override
	public boolean add(Product product) {
		// TODO Auto-generated method stub
		//Session session = this.Em.getCurrentSession();
		
	    this.Em.merge(product);
		
		return true;
	}

	@Override
	public boolean update(Product product) {
		// TODO Auto-generated method stub
		//Session session = this.Em.getCurrentSession();
		
		this.Em.merge(product);
		return true;
	}

	@Override
	public boolean delete(Integer id) {
		// TODO Auto-generated method stub
		//Session session = this.Em.getCurrentSession();
		
		this.Em.remove(this.findById(id));
		return true;
	}

}
